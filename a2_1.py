# -*- coding: utf-8 -*-
"""A2_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NaNeUEA03RHlQcbuUBw35e83nSYG77Vw
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

train_df = pd.read_csv(r'fashion-mnist_train.csv')
test_df = pd.read_csv(r'fashion-mnist_test.csv')
train_df.head()

train_df.shape
train_df.info()

train_data = np.array(train_df, dtype='float32')
test_data = np.array(test_df, dtype='float32')

x_train = train_data[:,1:] /255
y_train = train_data[:,0]


x_test = train_data[:,1:] /255
y_test = train_data[:,0]

x_train, x_validate, y_train, y_validate = train_test_split(
    x_train, y_train, test_size=0.2, random_state=12345
)

image = x_train[645,:].reshape((28,28))

plt.imshow(image)
plt.show

from sklearn.linear_model import LogisticRegression as LR
lr = LR().fit(x_train, y_train)
lr.score(x_validate, y_validate)

#model = LogisticRegression(C=1e5, multi_class='multinomial', solver='lbfgs', penalty='l2')
#model.fit(x_train, y_train)

#prediction = model.predict(x_test)

import numpy as np
c_try = np.linspace(0.01,1,10)
score = []
for i in c_try:
  lr = LR(penalty = 'l2',
       multi_class='multinomial', solver='lbfgs',
         C=i).fit(x_train, y_train)
  score.append(lr.score(x_train, y_train))
#  score.append(lr.score(x_validate, y_validate))
plt.figure()
plt.plot(c_try,score)
plt.show()

import numpy as np
c_value = [0.001,0.01,0.1,1,100,1000,10000]

score = []
for i in c_value:
  lr = LR(penalty = 'l2',
       multi_class='multinomial', solver='lbfgs',
         C=i).fit(x_train, y_train)
  score.append(lr.score(x_validate, y_validate))
  #score.append(lr.score(x_validate, y_validate))
plt.figure()
plt.plot(c_value,score)
plt.show()

import numpy as np
c_try = np.linspace(0.01,1,10)
score = []
for i in c_try:
  lr = LR(penalty = 'l2',
       multi_class='multinomial', solver='lbfgs',
         C=i).fit(x_train, y_train)
#  score.append(lr.score(x_train, y_train))
  score.append(lr.score(x_validate, y_validate))
plt.figure()
plt.plot(c_try,score)
plt.show()